# This file is included from nginx.conf inside the http{} context.

# -------- Logging format that shows edge headers for verification ----------
log_format edge '$remote_addr - $host "$request" '
                'xff="$http_x_forwarded_for" token="$http_x_edge_token"';

# -------- Real client IP from edge (replace subnet if yours differs) -------
real_ip_header X-Forwarded-For;
set_real_ip_from 172.18.0.0/16;   # <-- Docker subnet used by your edge->backend network

# -------- Gentle rate limit for wp-login (1 req/sec avg, small burst) ------
# (If this line errors on reload, your distro might include conf.d outside http{}.
# In that case, move this line into the main nginx.conf http{}.)
limit_req_zone $binary_remote_addr zone=wp_rl:10m rate=1r/s;

server {
  listen 80 default_server;
  server_name _;

  root   /var/www/html;
  index  index.php index.html index.htm;

  # Use our custom log format that includes edge headers
  access_log /var/log/nginx/access.log edge;

  # ---- Only allow traffic from the edge network; block everything else ----
  allow 172.18.0.0/16;                 # <-- tighten to your exact subnet or edge IP if you like
  deny  all;

  # ---- Shared-secret header from edge must be present/valid ---------------
  if ($http_x_edge_token != "s3cr3t-long-random-string") { return 403; }

  # ---- Request size (match PHP settings if you change it) -----------------
  client_max_body_size 64m;

  # ---- Basic hardening headers -------------------------------------------
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;

  # ===================== WordPress routing =====================

  # Pretty permalinks â†’ let WP handle non-files/dirs
  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  # Static assets: serve only if they exist; do NOT fall back into PHP
  location ~* \.(?:jpg|jpeg|gif|png|svg|webp|ico|css|js|map|woff2?|ttf|otf)$ {
    expires 30d;
    add_header Cache-Control "public, no-transform";
    access_log off;
    try_files $uri =404;
  }

  # Block XML-RPC (rarely needed; big brute-force vector)
  location = /xmlrpc.php { deny all; access_log off; log_not_found off; }

  # wp-login: add gentle rate-limit + normal PHP handling
  location = /wp-login.php {
    limit_req zone=wp_rl burst=20 nodelay;
    try_files $uri =404;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param HTTP_HOST        $host;
    fastcgi_param HTTPS            $https if_not_empty;
    fastcgi_index index.php;
    fastcgi_pass  wp-php:9000;
    fastcgi_read_timeout 120s;
    fastcgi_send_timeout 120s;
    fastcgi_buffer_size 32k;
    fastcgi_buffers 8 32k;
  }

  # General PHP handler (everything else ending with .php)
  location ~ \.php$ {
    try_files $uri =404;                                # don't execute non-existent scripts
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;  # safer than $document_root
    fastcgi_param PATH_INFO        $fastcgi_path_info;
    fastcgi_param HTTP_HOST        $host;
    fastcgi_param HTTPS            $https if_not_empty;
    fastcgi_index index.php;
    fastcgi_pass  wp-php:9000;
    fastcgi_read_timeout 120s;
    fastcgi_send_timeout 120s;
    fastcgi_buffer_size 32k;
    fastcgi_buffers 8 32k;
  }

  # Never execute PHP from uploads (blocks web shells)
  location ~* /(?:uploads|files)/.*\.php$ { deny all; }

  # Deny sensitive files outright
  location ~* ^/(?:\.|wp-config\.php|composer\.(json|lock)|readme\.html|license\.txt) { deny all; }
  location ~* \.(?:ini|log|sh|sql|bak|config|env)$ { deny all; }
  location ~ /\.ht { deny all; }  # hide Apache files

  # Housekeeping
  location = /favicon.ico { log_not_found off; access_log off; }
  location = /robots.txt  { allow all;       log_not_found off; access_log off; }
}